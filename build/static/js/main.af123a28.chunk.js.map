{"version":3,"sources":["hooks/use-input.js","components/BasicForm.js","App.js","index.js"],"names":["initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","useReducer","inputState","dispatch","valueIsValid","hasError","isValid","valueChangeHandler","event","target","inputBlurHandler","reset","isNotEmpty","trim","isEmail","includes","BasicForm","props","firstNameValue","firstNameIsValid","firstNameHasError","firstNameChangeHandler","firstNameBlurHandler","resetFirstName","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","formIsValid","firstNameClasses","lastNameClasses","emailClasses","onSubmit","preventDefault","console","log","className","htmlFor","id","onChange","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"mLAEMA,EAAoB,CACxBC,MAAO,GACPC,WAAW,GAGPC,EAAoB,SAApBA,EAAqBC,EAAOC,GAChC,MAAoB,UAAhBA,EAAOC,KACF,CAAEL,MAAOI,EAAOJ,MAAOC,UAAWE,EAAMF,WAE7B,SAAhBG,EAAOC,KACF,CAAEJ,WAAW,EAAMD,MAAOG,EAAMH,OAErB,UAAhBI,EAAOC,KACF,CAAEJ,WAAW,EAAOD,MAAO,IAE7BE,GAkCMI,EA/BE,SAACC,GAChB,MAA+BC,qBAC7BN,EACAH,GAFF,mBAAOU,EAAP,KAAmBC,EAAnB,KAKMC,EAAeJ,EAAcE,EAAWT,OACxCY,GAAYD,GAAgBF,EAAWR,UAc7C,MAAO,CACLD,MAAOS,EAAWT,MAClBa,QAASF,EACTC,WACAE,mBAhByB,SAACC,GAC1BL,EAAS,CAAEL,KAAM,QAASL,MAAOe,EAAMC,OAAOhB,SAgB9CiB,iBAbuB,SAACF,GACxBL,EAAS,CAAEL,KAAM,UAajBa,MAVY,WACZR,EAAS,CAAEL,KAAM,a,OCpCfc,EAAa,SAACnB,GAAD,MAA4B,KAAjBA,EAAMoB,QAC9BC,EAAU,SAACrB,GAAD,OAAWA,EAAMsB,SAAS,MAiG3BC,EA/FG,SAACC,GACjB,MAOIlB,EAASa,GANJM,EADT,EACEzB,MACS0B,EAFX,EAEEb,QACUc,EAHZ,EAGEf,SACoBgB,EAJtB,EAIEd,mBACkBe,EALpB,EAKEZ,iBACOa,EANT,EAMEZ,MAEF,EAOIZ,EAASa,GANJY,EADT,EACE/B,MACSgC,EAFX,EAEEnB,QACUoB,EAHZ,EAGErB,SACoBsB,EAJtB,EAIEpB,mBACkBqB,EALpB,EAKElB,iBACOmB,EANT,EAMElB,MAEF,EAOIZ,EAASe,GANJgB,EADT,EACErC,MACSsC,EAFX,EAEEzB,QACU0B,EAHZ,EAGE3B,SACoB4B,EAJtB,EAIE1B,mBACkB2B,EALpB,EAKExB,iBACOyB,EANT,EAMExB,MAGEyB,GAAc,EAEdjB,GAAoBM,GAAmBM,IACzCK,GAAc,GAGhB,IAeMC,EAAmBjB,EAAoB,uBAAyB,eAChEkB,EAAkBZ,EAAmB,uBAAyB,eAC9Da,EAAeP,EAAgB,uBAAyB,eAE9D,OACE,uBAAMQ,SApBc,SAAAhC,GACpBA,EAAMiC,iBAEDL,IAILM,QAAQC,IAAI,cACZD,QAAQC,IAAIzB,EAAgBM,EAAeM,GAE3CP,IACAM,IACAM,MAQA,UACE,sBAAKS,UAAU,gBAAf,UACE,sBAAKA,UAAWP,EAAhB,UACE,uBAAOQ,QAAQ,OAAf,wBACA,uBACE/C,KAAK,OACLgD,GAAG,OACHrD,MAAOyB,EACP6B,SAAU1B,EACV2B,OAAQ1B,IAETF,GAAqB,mBAAGwB,UAAU,aAAb,2CAExB,sBAAKA,UAAWN,EAAhB,UACE,uBAAOO,QAAQ,OAAf,uBACA,uBACE/C,KAAK,OACLgD,GAAG,OACHrD,MAAO+B,EACPuB,SAAUpB,EACVqB,OAAQpB,IAETF,GAAoB,mBAAGkB,UAAU,aAAb,6CAGzB,sBAAKA,UAAWL,EAAhB,UACE,uBAAOM,QAAQ,OAAf,4BACA,uBACE/C,KAAK,OACLgD,GAAG,OACHrD,MAAOqC,EACPiB,SAAUd,EACVe,OAAQd,IAETF,GAAiB,mBAAGY,UAAU,aAAb,oDAEpB,qBAAKA,UAAU,eAAf,SACE,wBAAQK,UAAWb,EAAnB,0BCpFOc,MARf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCANO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.af123a28.chunk.js","sourcesContent":["import { useReducer } from 'react';\n\nconst initialInputState = {\n  value: '',\n  isTouched: false,\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === 'INPUT') {\n    return { value: action.value, isTouched: state.isTouched };\n  }\n  if (action.type === 'BLUR') {\n    return { isTouched: true, value: state.value };\n  }\n  if (action.type === 'RESET') {\n    return { isTouched: false, value: '' };\n  }\n  return inputStateReducer;\n};\n\nconst useInput = (validateValue) => {\n  const [inputState, dispatch] = useReducer(\n    inputStateReducer,\n    initialInputState\n  );\n\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = (event) => {\n    dispatch({ type: 'INPUT', value: event.target.value });\n  };\n\n  const inputBlurHandler = (event) => {\n    dispatch({ type: 'BLUR' });\n  };\n\n  const reset = () => {\n    dispatch({ type: 'RESET' });\n  };\n\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n","import useInput from '../hooks/use-input';\n\nconst isNotEmpty = (value) => value.trim() !== '';\nconst isEmail = (value) => value.includes('@');\n\nconst BasicForm = (props) => {\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(isNotEmpty);\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput(isNotEmpty);\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(isEmail);\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log('Submitted!');\n    console.log(firstNameValue, lastNameValue, emailValue);\n\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailHasError ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className={firstNameClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input\n            type='text'\n            id='name'\n            value={firstNameValue}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameHasError && <p className=\"error-text\">Please enter a first name.</p>}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor='name'>Last Name</label>\n          <input\n            type='text'\n            id='name'\n            value={lastNameValue}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n          />\n          {lastNameHasError && <p className=\"error-text\">Please enter a last name.</p>}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input\n          type='text'\n          id='name'\n          value={emailValue}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n        />\n        {emailHasError && <p className=\"error-text\">Please enter a valid email address.</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import BasicForm from './components/BasicForm';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}